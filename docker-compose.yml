version: '3.4'

services:
  graphql.users.api:
    image: ${DOCKER_REGISTRY-}graphqlusersapi
    container_name: GraphQL.Users.Api
    build:
      context: .
      dockerfile: GraphQL.Users.Api/Dockerfile
    ports:
      - "5000:443"
    depends_on:
      - db.users
    networks:
      - backend

  graphql.photos.api:
    image: ${DOCKER_REGISTRY-}graphqlphotosapi
    container_name: GraphQL.Photos.Api
    build:
      context: .
      dockerfile: GraphQL.Photos.Api/Dockerfile
    ports:
      - "5001:443"
    depends_on:
      - db.photos
    networks:
      - backend

  graphql.stitching.server:
    image: ${DOCKER_REGISTRY-}graphqlstitchingserver
    container_name: GraphQL.Stitching.Server
    build:
      context: .
      dockerfile: GraphQL.Stitching.Server/Dockerfile
    ports:
      - "5002:443"
    depends_on:
      - graphql.users.api
      - graphql.photos.api
    networks:
      - backend

  db.users:
    image: mcr.microsoft.com/mssql/server
    container_name: GraphQL.SqlServer.Users
    ports:
      - "1433:1433"
    networks:
      - backend

  db.photos:
    image: mcr.microsoft.com/mssql/server
    container_name: GraphQL.SqlServer.Photos
    ports:
      - "1432:1433"
    networks:
      - backend
  
networks:
  backend:
    driver: bridge